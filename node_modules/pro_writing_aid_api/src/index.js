/**
 * ProWritingAid API V2
 * Official ProWritingAid API Version 2
 *
 * OpenAPI spec version: v2
 * Contact: hello@prowritingaid.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnalysisSettings', 'model/AnalysisSummary', 'model/AnalysisSummaryGraph', 'model/AnalysisSummaryGraphItem', 'model/AnalysisSummaryItem', 'model/AnalysisSummarySubItem', 'model/AsyncResponseContextualThesaurusResponse', 'model/AsyncResponseHtmlAnalysisResponse', 'model/AsyncResponseSummaryAnalysisResponse', 'model/AsyncResponseTextAnalysisResponse', 'model/AsyncResponseWordCloudResponse', 'model/ContextualThesaurusRequest', 'model/ContextualThesaurusResponse', 'model/DocTag', 'model/EntryMeaning', 'model/HtmlAnalysisRequest', 'model/HtmlAnalysisResponse', 'model/SuggestionCategory', 'model/SummaryAnalysisRequest', 'model/SummaryAnalysisResponse', 'model/TextAnalysisRequest', 'model/TextAnalysisResponse', 'model/ThesaurusRequest', 'model/ThesaurusResponse', 'model/WordCloudRequest', 'model/WordCloudResponse', 'api/ContextualThesaurusApi', 'api/HtmlApi', 'api/SummaryApi', 'api/TextApi', 'api/ThesaurusApi', 'api/WordCloudApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AnalysisSettings'), require('./model/AnalysisSummary'), require('./model/AnalysisSummaryGraph'), require('./model/AnalysisSummaryGraphItem'), require('./model/AnalysisSummaryItem'), require('./model/AnalysisSummarySubItem'), require('./model/AsyncResponseContextualThesaurusResponse'), require('./model/AsyncResponseHtmlAnalysisResponse'), require('./model/AsyncResponseSummaryAnalysisResponse'), require('./model/AsyncResponseTextAnalysisResponse'), require('./model/AsyncResponseWordCloudResponse'), require('./model/ContextualThesaurusRequest'), require('./model/ContextualThesaurusResponse'), require('./model/DocTag'), require('./model/EntryMeaning'), require('./model/HtmlAnalysisRequest'), require('./model/HtmlAnalysisResponse'), require('./model/SuggestionCategory'), require('./model/SummaryAnalysisRequest'), require('./model/SummaryAnalysisResponse'), require('./model/TextAnalysisRequest'), require('./model/TextAnalysisResponse'), require('./model/ThesaurusRequest'), require('./model/ThesaurusResponse'), require('./model/WordCloudRequest'), require('./model/WordCloudResponse'), require('./api/ContextualThesaurusApi'), require('./api/HtmlApi'), require('./api/SummaryApi'), require('./api/TextApi'), require('./api/ThesaurusApi'), require('./api/WordCloudApi'));
  }
}(function(ApiClient, AnalysisSettings, AnalysisSummary, AnalysisSummaryGraph, AnalysisSummaryGraphItem, AnalysisSummaryItem, AnalysisSummarySubItem, AsyncResponseContextualThesaurusResponse, AsyncResponseHtmlAnalysisResponse, AsyncResponseSummaryAnalysisResponse, AsyncResponseTextAnalysisResponse, AsyncResponseWordCloudResponse, ContextualThesaurusRequest, ContextualThesaurusResponse, DocTag, EntryMeaning, HtmlAnalysisRequest, HtmlAnalysisResponse, SuggestionCategory, SummaryAnalysisRequest, SummaryAnalysisResponse, TextAnalysisRequest, TextAnalysisResponse, ThesaurusRequest, ThesaurusResponse, WordCloudRequest, WordCloudResponse, ContextualThesaurusApi, HtmlApi, SummaryApi, TextApi, ThesaurusApi, WordCloudApi) {
  'use strict';

  /**
   * Official javascript SDK.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ProWritingAidApiV2 = require('index'); // See note below*.
   * var xxxSvc = new ProWritingAidApiV2.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ProWritingAidApiV2.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ProWritingAidApiV2.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ProWritingAidApiV2.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AnalysisSettings model constructor.
     * @property {module:model/AnalysisSettings}
     */
    AnalysisSettings: AnalysisSettings,
    /**
     * The AnalysisSummary model constructor.
     * @property {module:model/AnalysisSummary}
     */
    AnalysisSummary: AnalysisSummary,
    /**
     * The AnalysisSummaryGraph model constructor.
     * @property {module:model/AnalysisSummaryGraph}
     */
    AnalysisSummaryGraph: AnalysisSummaryGraph,
    /**
     * The AnalysisSummaryGraphItem model constructor.
     * @property {module:model/AnalysisSummaryGraphItem}
     */
    AnalysisSummaryGraphItem: AnalysisSummaryGraphItem,
    /**
     * The AnalysisSummaryItem model constructor.
     * @property {module:model/AnalysisSummaryItem}
     */
    AnalysisSummaryItem: AnalysisSummaryItem,
    /**
     * The AnalysisSummarySubItem model constructor.
     * @property {module:model/AnalysisSummarySubItem}
     */
    AnalysisSummarySubItem: AnalysisSummarySubItem,
    /**
     * The AsyncResponseContextualThesaurusResponse model constructor.
     * @property {module:model/AsyncResponseContextualThesaurusResponse}
     */
    AsyncResponseContextualThesaurusResponse: AsyncResponseContextualThesaurusResponse,
    /**
     * The AsyncResponseHtmlAnalysisResponse model constructor.
     * @property {module:model/AsyncResponseHtmlAnalysisResponse}
     */
    AsyncResponseHtmlAnalysisResponse: AsyncResponseHtmlAnalysisResponse,
    /**
     * The AsyncResponseSummaryAnalysisResponse model constructor.
     * @property {module:model/AsyncResponseSummaryAnalysisResponse}
     */
    AsyncResponseSummaryAnalysisResponse: AsyncResponseSummaryAnalysisResponse,
    /**
     * The AsyncResponseTextAnalysisResponse model constructor.
     * @property {module:model/AsyncResponseTextAnalysisResponse}
     */
    AsyncResponseTextAnalysisResponse: AsyncResponseTextAnalysisResponse,
    /**
     * The AsyncResponseWordCloudResponse model constructor.
     * @property {module:model/AsyncResponseWordCloudResponse}
     */
    AsyncResponseWordCloudResponse: AsyncResponseWordCloudResponse,
    /**
     * The ContextualThesaurusRequest model constructor.
     * @property {module:model/ContextualThesaurusRequest}
     */
    ContextualThesaurusRequest: ContextualThesaurusRequest,
    /**
     * The ContextualThesaurusResponse model constructor.
     * @property {module:model/ContextualThesaurusResponse}
     */
    ContextualThesaurusResponse: ContextualThesaurusResponse,
    /**
     * The DocTag model constructor.
     * @property {module:model/DocTag}
     */
    DocTag: DocTag,
    /**
     * The EntryMeaning model constructor.
     * @property {module:model/EntryMeaning}
     */
    EntryMeaning: EntryMeaning,
    /**
     * The HtmlAnalysisRequest model constructor.
     * @property {module:model/HtmlAnalysisRequest}
     */
    HtmlAnalysisRequest: HtmlAnalysisRequest,
    /**
     * The HtmlAnalysisResponse model constructor.
     * @property {module:model/HtmlAnalysisResponse}
     */
    HtmlAnalysisResponse: HtmlAnalysisResponse,
    /**
     * The SuggestionCategory model constructor.
     * @property {module:model/SuggestionCategory}
     */
    SuggestionCategory: SuggestionCategory,
    /**
     * The SummaryAnalysisRequest model constructor.
     * @property {module:model/SummaryAnalysisRequest}
     */
    SummaryAnalysisRequest: SummaryAnalysisRequest,
    /**
     * The SummaryAnalysisResponse model constructor.
     * @property {module:model/SummaryAnalysisResponse}
     */
    SummaryAnalysisResponse: SummaryAnalysisResponse,
    /**
     * The TextAnalysisRequest model constructor.
     * @property {module:model/TextAnalysisRequest}
     */
    TextAnalysisRequest: TextAnalysisRequest,
    /**
     * The TextAnalysisResponse model constructor.
     * @property {module:model/TextAnalysisResponse}
     */
    TextAnalysisResponse: TextAnalysisResponse,
    /**
     * The ThesaurusRequest model constructor.
     * @property {module:model/ThesaurusRequest}
     */
    ThesaurusRequest: ThesaurusRequest,
    /**
     * The ThesaurusResponse model constructor.
     * @property {module:model/ThesaurusResponse}
     */
    ThesaurusResponse: ThesaurusResponse,
    /**
     * The WordCloudRequest model constructor.
     * @property {module:model/WordCloudRequest}
     */
    WordCloudRequest: WordCloudRequest,
    /**
     * The WordCloudResponse model constructor.
     * @property {module:model/WordCloudResponse}
     */
    WordCloudResponse: WordCloudResponse,
    /**
     * The ContextualThesaurusApi service constructor.
     * @property {module:api/ContextualThesaurusApi}
     */
    ContextualThesaurusApi: ContextualThesaurusApi,
    /**
     * The HtmlApi service constructor.
     * @property {module:api/HtmlApi}
     */
    HtmlApi: HtmlApi,
    /**
     * The SummaryApi service constructor.
     * @property {module:api/SummaryApi}
     */
    SummaryApi: SummaryApi,
    /**
     * The TextApi service constructor.
     * @property {module:api/TextApi}
     */
    TextApi: TextApi,
    /**
     * The ThesaurusApi service constructor.
     * @property {module:api/ThesaurusApi}
     */
    ThesaurusApi: ThesaurusApi,
    /**
     * The WordCloudApi service constructor.
     * @property {module:api/WordCloudApi}
     */
    WordCloudApi: WordCloudApi
  };

  return exports;
}));
