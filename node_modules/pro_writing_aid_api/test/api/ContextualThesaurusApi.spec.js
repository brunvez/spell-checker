/**
 * ProWritingAid API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProWritingAidApi);
  }
}(this, function (expect, ProWritingAidApi) {
  'use strict';
  describe('ContextualThesaurusApi', function () {
    describe('contextualThesaurusPost', function () {
      it('should call contextualThesaurusPost successfully', function (done) {
        var api = new ProWritingAidApi.ContextualThesaurusApi();
        var request = new ProWritingAidApi.ContextualThesaurusRequest(
          "This is a sample text in English to test the sdk thesaurus. " +
          "This is a second paragraph in the document. This  is a new line.",
          17,
          20
        );
        var licenseCode = ProWritingAidApi.ApiClient.instance.authentications['licenseCode'];
        licenseCode.apiKey = 'your license code';
        api.post(request)
          .then(function (data) {
            data = data.Result;
            console.log('API called successfully. Returned data: ');
            console.log(data);
            expect(data.Suggestions).to.not.be.empty();
            expect(data.Suggestions[0]).to.be("paragraph");
            done();
          }, function (error) {
            done(error);
          });
      });
    });
  });

}));
